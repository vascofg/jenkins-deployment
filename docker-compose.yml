version: '2'

networks:
  monitor-net:
    driver: bridge
  logging-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}
    jenkins_data: {}

services:

  prometheus:
    image: prom/prometheus:v1.7.0
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'
      - '-alertmanager.url=http://alertmanager:9093'
      - '-storage.local.memory-chunks=100000'
    restart: unless-stopped
    expose:
      - 9090
    #ports:
    #  - 9090:9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
  
  alertmanager:
    image: prom/alertmanager:v0.7.1
    container_name: alertmanager
    volumes: 
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    #ports:
    #  - 9093:9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.14.0
    container_name: nodeexporter
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor:v0.24.1
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
  
  grafana:
    image: grafana/grafana:4.3.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - grafana/user.config
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - 3000:3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.4.1
    container_name: elasticsearch
    restart: unless-stopped
    ports:
      - 9200:9200
    networks:
      - logging-net

  kibana:
    image: docker.elastic.co/kibana/kibana:5.4.1
    container_name: kibana
    restart: unless-stopped
    env_file:
      - elastic/kibana.config
    ports:
      - 5601:5601
    networks:
      - logging-net

  jenkins:
    build:
      context: jenkins/
    container_name: jenkins
    restart: unless-stopped
    volumes:
      - jenkins_data:/var/jenkins_home
    ports:
      - 80:8080
      - 50000:50000
    networks:
      - logging-net
